CREATE TABLE warehouse_documents
(
    id uniqueidentifier NOT NULL ,
    idd VARCHAR(50) NOT NULL,
    document_grounds_id uniqueidentifier DEFAULT NULL,
    document_type INTEGER NOT NULL,
    warehouse VARCHAR(100),
    currency VARCHAR(100),
    return_type VARCHAR(100),
    warehouse_receiver VARCHAR(100),
    final_warehouse VARCHAR(100),
    currency_rate DECIMAL(10, 4),
    quantity_places INTEGER,
    ground VARCHAR(100),
    status INTEGER DEFAULT 0,
    expected_arrival datetime2,
    transfer_number BIGINT,
    correction VARCHAR(100),
    transit_warehouse VARCHAR(100),
    trade_number VARCHAR(100),
    prepayment DECIMAL(10,2),
    order_status VARCHAR(50),
    guid VARCHAR(100),
    quantity BIGINT,
    sum DECIMAL(10,2),
    fact_quantity BIGINT,
    document_comment TEXT,
    collected_by VARCHAR(100),
    accepted_by VARCHAR(100),
    created_at datetime2 NOT NULL,
    created_by VARCHAR(100),
    updated_at VARCHAR(10),
    updated_by VARCHAR(100),
    iddoc VARCHAR(100),
    docno VARCHAR(100),
    idocdef INTEGER,
    cashbox INTEGER,
    sales bit,
    realized bit,
    purchases_book INTEGER,
    availability INTEGER,
    jur_person VARCHAR(100),
    firm_recipient VARCHAR(100),
    is_mark INTEGER,
    project VARCHAR(100),
    suppliers bit,
    sales_book INTEGER,
    tmc bit,
    reserves bit,
    orders_requests bit,
    app_code VARCHAR(100),
    requests bit,
    cash bit,
    delivered bit,
    sub_contacts bit,
    closed bit,
    orders bit,
    CONSTRAINT pk_warehouse_documents PRIMARY KEY (id)
);

CREATE UNIQUE INDEX ui_warehouse_documents_idd ON warehouse_documents (idd);

CREATE TABLE warehouse_products
(
    id uniqueidentifier NOT NULL ,
    idd VARCHAR(50) NOT NULL,
    document_idd VARCHAR(50) NOT NULL,
    barcode VARCHAR(50) NOT NULL,
    barcode_box VARCHAR(50) NOT NULL,
    vendor_code VARCHAR(50),
    base_unit VARCHAR(50),
    is_weight bit,
    kind_of VARCHAR(50),
    kind_of_product VARCHAR(50),
    model_code VARCHAR(50),
    pmm_code VARCHAR(50),
    min_balance DECIMAL(10,2),
    exclude_from_price bit,
    gtd_number VARCHAR(50),
    main_unit VARCHAR(50),
    main_property VARCHAR(50),
    nds_rate VARCHAR(10),
    np_rate VARCHAR(10),
    country_of_origin VARCHAR(50),
    product_group VARCHAR(50),
    full_name VARCHAR(255),
    mark_type_code VARCHAR(100),
    line_number INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    quantity_fact INTEGER,
    price DECIMAL(10,2),
    sum DECIMAL(10,2),
    vat DECIMAL(10,2),
    marks VARCHAR(131),
    without_marks INTEGER,
    coefficient DECIMAL(10,2),
    unit VARCHAR(100),
    reason_return VARCHAR(500),
    products_comment TEXT,
    idd_analog VARCHAR(50),
    original_id VARCHAR(50),
    original_idoc VARCHAR(50),
    CONSTRAINT pk_warehouse_products PRIMARY KEY (id),
    CONSTRAINT fk_warehouse_products_warehouse_documents FOREIGN KEY (document_idd) REFERENCES warehouse_documents (idd)
);

CREATE UNIQUE INDEX ui_warehouse_products ON warehouse_products (idd, document_idd, barcode_box, line_number);

CREATE TABLE warehouse_open_lot
(
    id uniqueidentifier NOT NULL ,
    document_idd VARCHAR(50) NOT NULL,
    lot_idd VARCHAR(50) NOT NULL,
    product_idd VARCHAR(50) NOT NULL,
    line_number_lot INTEGER NOT NULL,
    original_id_lot VARCHAR(50),
    original_id VARCHAR(50) NOT NULL,
    barcode VARCHAR(50) NOT NULL,
    barcode_box VARCHAR(50) NOT NULL,
    full_name VARCHAR(100) NOT NULL,
    vendor_code VARCHAR(100) NOT NULL,
    fact_quantity INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    price DECIMAL(10,2),
    vat DECIMAL(10,2),
    mark_type_code VARCHAR(100),
    unit VARCHAR(100),
    nds_rate VARCHAR(100),
    CONSTRAINT pk_warehouse_open_lot PRIMARY KEY (id)
);

CREATE UNIQUE INDEX ui_warehouse_open_lot_lot_idd_product_idd_line_number_lot ON warehouse_open_lot (lot_idd, product_idd, line_number_lot);

CREATE TABLE warehouse_scanned_marks
(
    id uniqueidentifier NOT NULL ,
    product_id uniqueidentifier,
    open_lot_id uniqueidentifier,
    number INTEGER NOT NULL,
    barcode_box VARCHAR(50),
    mark_type_code VARCHAR(100),
    scanned_mark VARCHAR(100),
    data_matrix VARCHAR(100),
    is_valid_mark bit,
    error_message VARCHAR(500),
    CONSTRAINT pk_warehouse_product_mark PRIMARY KEY (id)
);
